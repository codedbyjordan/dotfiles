(deflisten workspace :initial "1" "$HOME/.config/eww/scripts/workspace.sh")

(defpoll time :interval "10s"
  "date '+%I:%M %p %m/%d/%Y'")

(defvar is_muted false)

(defpoll window_title :interval "30ms"
  "echo $(xdotool getwindowfocus getwindowname)")

(defpoll current_volume :interval "30ms"
  "pactl get-sink-volume @DEFAULT_SINK@ | grep -oP '[0-9]+(?=%)' | head -1")

(defpoll weather :interval "5m"
  "curl 'wttr.in/?format=1' | grep -oP '([+-][0-9]*°F)'")

(defwidget workspaces []
  (literal :content workspace)
)

(defwidget power_button []
  (button :class "power-button" :onclick "/opt/eww open --toggle powermenu" 
    (label
      :text "⏻"
    )
  )
)

(defwidget volume []
  (box
    :space-evenly false
    (label :text "${current_volume}% ")
    (button :class "icon" :onclick "./scripts/toggle_mute.sh"
      (label :text {is_muted ? "" : ""})
    )
    (scale 
    :class "volume-slider"
    :min 0 
    :width "10%"
    :max 101
    :hexpand true
    :value current_volume
    :onchange "pactl set-sink-volume @DEFAULT_SINK@ {}%"
  ))
)
            

(defwindow statusbar
  :monitor 0
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "36px"
                      :anchor "top center")
  :stacking "fg"
  :reserve (struts :distance "30px" :side "top")
  :exclusive true
  :wm-ignore false
  (box
    :class "eww-bar"
    (box :space-evenly true
      (box :class "leftbox" 
          :halign "start"
          :valign "center"
          :hexpand true
          (workspaces))
      (box :class "centerbox"
        (label :text "${window_title}" :limit-width 50)
      )
      (box :class "rightbox"
          :halign "end"
          :space-evenly false
          :spacing 16
          :hexpand true
          (volume)
          (label :text "${weather}")
          (label :text "CPU: ${round(EWW_CPU.avg, 1)}%")
          (label :text "RAM: ${round(EWW_RAM.used_mem_perc, 1)}%")
          (label :text " ${time}")
          (power_button)
      ))))
